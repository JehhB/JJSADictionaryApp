/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import dictionarymodel.*;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import java.util.Random;
import javax.swing.AbstractListModel;
import javax.swing.ListCellRenderer;
import java.util.function.Consumer;
import javax.swing.JList;

/**
 *
 * @author eco
 */
public class MainPanel extends javax.swing.JPanel {

	private DictionaryModel model;

	/**
	 * Creates new form MainPanel
	 */
	public MainPanel() {
		initComponents();
		suggestionList.setCellRenderer((JList<? extends DictionaryEntry> jlist, DictionaryEntry e, int i, boolean bln, boolean bln1) -> {
			view.SuggestionPanel component1 = new SuggestionPanel();
			component1.setData(e);
			return component1;
		});
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                javax.swing.JLabel headerLabel1 = new javax.swing.JLabel();
                entryPanel = new view.DictionaryEntryPanel();
                javax.swing.JLabel headerLabel2 = new javax.swing.JLabel();
                suggestionList = new javax.swing.JList<>();

                setBackground(new java.awt.Color(255, 255, 255));
                setMaximumSize(new java.awt.Dimension(640, 32767));
                setMinimumSize(new java.awt.Dimension(640, 0));

                headerLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
                headerLabel1.setForeground(new java.awt.Color(4, 114, 159));
                headerLabel1.setText("Word of the day");

                headerLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
                headerLabel2.setForeground(new java.awt.Color(65, 114, 159));
                headerLabel2.setText("Expand your vocabulary");

                suggestionList.setAutoscrolls(false);
                suggestionList.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(entryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(headerLabel1)
                        .addComponent(headerLabel2)
                        .addComponent(suggestionList, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(headerLabel1)
                                .addGap(16, 16, 16)
                                .addComponent(entryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(headerLabel2)
                                .addGap(16, 16, 16)
                                .addComponent(suggestionList)
                                .addGap(0, 0, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

	public void setModel(DictionaryModel model) {
		this.model = model;
		var random = new Random(new Date()
			.toString()
			.substring(0, 10)
			.hashCode());
		var wordOfTheDay = model.getElementAt(random.nextInt(model.getSize()));
		entryPanel.setData(wordOfTheDay);

		refresh();
	}

	public void refresh() {
		if (model == null) {
			return;
		}

		var random = new Random();
		var randomNumber = new int[10];

		for (int i = 0; i < randomNumber.length; ++i) {
			randomNumber[i] = random.nextInt(model.getSize());
		}

		suggestionList.setModel(new AbstractListModel<>() {
			@Override
			public int getSize() {
				return randomNumber.length;
			}

			@Override
			public DictionaryEntry getElementAt(int i) {
				return model.getElementAt(randomNumber[i]);
			}

		});
	}

	public void addGotoDefinitionListener(Consumer<DictionaryEntry> listener) {
		suggestionList.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent ev) {
				var index = suggestionList.locationToIndex(ev.getPoint());
				var entry = suggestionList.getModel().getElementAt(index);
				listener.accept(entry);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private view.DictionaryEntryPanel entryPanel;
        private javax.swing.JList<DictionaryEntry> suggestionList;
        // End of variables declaration//GEN-END:variables
}
